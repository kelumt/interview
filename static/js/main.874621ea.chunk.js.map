{"version":3,"sources":["components/calculator/ButtonPanel.js","components/calculator/DisplayPanel.js","services/CalculatorService.js","components/calculator/Calculator.js","App.js","serviceWorker.js","index.js"],"names":["ButtonPanel","buttonStyle","minWidth","width","height","margin","labelStyle","fontSize","lineHeight","style","Object","assign","goSTyle","className","Button","variant","label","value","onClick","this","props","onNumberBtnClick","onOperatorBtnClick","onClearBtnClick","onDeleteBtnClick","color","onGoBtnClick","React","Component","DisplayPanel","id","TextField","InputProps","readOnly","expression","answer","CalculatorService","isNaN","parseFloat","isFinite","array","i","length","splice","infix","outputQueue","operatorStack","operators","precedence","associativity","replace","clean","split","token","isNumeric","indexOf","o1","o2","pop","push","console","log","yard","rpn","ops","peek","a","stack","match","reduce","output","concat","reverse","join","ts","s","forEach","t","evaluate","operand1","operator","operand2","number1","Number","parseInt","number2","Calculator","state","display","result","inputNumber","bind","inputOperator","clearInput","deleteInput","calculate","e","newDisplay","currentTarget","setState","currentDisplay","selectedOPerator","lastCharacter","slice","isOPerator","substring","App","numInput","operInput","clear","delete","AppBar","position","Toolbar","Typography","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8TAiDeA,E,uKAxCP,IAAMC,EAAc,CAACC,SAAU,OAAQC,MAAO,OAAQC,OAAQ,OAAQC,OAAQ,OAE9EC,EAAa,CAACC,SAAU,OAAQC,WAAYP,EAAYG,QAExDK,EAAQC,OAAOC,OAAO,GAAIV,GAC1BW,EAAUF,OAAOC,OAAO,GAJR,CAACT,SAAU,OAAQC,MAAO,QAASC,OAAQ,OAAQC,OAAQ,QAY3E,OACI,yBAAKQ,UAAU,iBACb,kBAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAR1B,IAQwCP,MAAOA,EAAOH,WAAYA,EAAYW,MAAM,IAAIC,QAASC,KAAKC,MAAMC,kBAP7G,KAQD,kBAACP,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAT1B,IASwCP,MAAOA,EAAOH,WAAYA,EAAYW,MAAM,IAAIC,QAASC,KAAKC,MAAMC,kBAA9G,KACA,kBAACP,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAV1B,IAUwCP,MAAOA,EAAOH,WAAYA,EAAYW,MAAM,IAAIC,QAASC,KAAKC,MAAMC,kBAA9G,KACA,kBAACP,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAX1B,IAWwCP,MAAOA,EAAOH,WAAYA,EAAYW,MAAM,IAAIC,QAASC,KAAKC,MAAME,oBAA9G,KACA,kBAACR,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAZ1B,IAYwCP,MAAOA,EAAOH,WAAYA,EAAYW,MAAM,IAAIC,QAASC,KAAKC,MAAMC,kBAA9G,KACA,kBAACP,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAb1B,IAawCP,MAAOA,EAAOH,WAAYA,EAAYW,MAAM,IAAIC,QAASC,KAAKC,MAAMC,kBAA9G,KACA,kBAACP,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAd1B,IAcwCP,MAAOA,EAAOH,WAAYA,EAAYW,MAAM,IAAIC,QAASC,KAAKC,MAAMC,kBAA9G,KACA,kBAACP,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAf1B,IAewCP,MAAOA,EAAOH,WAAYA,EAAYW,MAAM,IAAIC,QAASC,KAAKC,MAAME,oBAA9G,KACA,kBAACR,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAhB1B,IAgBwCP,MAAOA,EAAOH,WAAYA,EAAYW,MAAM,IAAIC,QAASC,KAAKC,MAAMC,kBAA9G,KACA,kBAACP,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAjB1B,IAiBwCP,MAAOA,EAAOH,WAAYA,EAAYW,MAAM,IAAIC,QAASC,KAAKC,MAAMC,kBAA9G,KACA,kBAACP,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAlB1B,IAkBwCP,MAAOA,EAAOH,WAAYA,EAAYW,MAAM,IAAIC,QAASC,KAAKC,MAAMC,kBAA9G,KACA,kBAACP,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAnB1B,IAmBwCP,MAAOA,EAAOH,WAAYA,EAAYW,MAAM,IAAIC,QAASC,KAAKC,MAAME,oBAA9G,KACA,kBAACR,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MApB1B,IAoBwCP,MAAOA,EAAOH,WAAYA,EAAYW,MAAM,IAAIC,QAASC,KAAKC,MAAMC,kBAA9G,KACA,kBAACP,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MArB1B,IAqBwCP,MAAOA,EAAOH,WAAYA,EAAYW,MAAM,IAAIC,QAASC,KAAKC,MAAME,oBAA9G,KACA,kBAACR,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAtB1B,IAsBwCP,MAAOA,EAAOH,WAAYA,EAAYW,MAAM,IAAIC,QAASC,KAAKC,MAAME,oBAA9G,KACA,kBAACR,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAvB1B,IAuBwCP,MAAOA,EAAOH,WAAYA,EAAYW,MAAM,IAAIC,QAASC,KAAKC,MAAME,oBAA9G,KACA,kBAACR,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAxB1B,IAwBwCP,MAAOA,EAAOH,WAAYA,EAAYW,MAAM,IAAIC,QAASC,KAAKC,MAAMG,iBAA9G,KACA,kBAACT,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAzB1B,IAyBwCP,MAAOA,EAAOH,WAAYA,EAAYW,MAAM,IAAIC,QAASC,KAAKC,MAAMI,kBAA9G,KACA,kBAACV,EAAA,EAAD,CAAQC,QAAQ,YAAYU,MAAM,UAAUT,MA1B1C,IA0BwDP,MAAOG,EAASN,WAAYA,EAAYW,MAAM,KAAKC,QAASC,KAAKC,MAAMM,cAAjI,W,GAtCYC,IAAMC,W,QCgBjBC,E,uKAbP,OACI,yBAAKC,GAAG,qBACJ,yBAAKjB,UAAU,eACX,kBAACkB,EAAA,EAAD,CAAWD,GAAG,iBAAiBd,MAAM,aAAagB,WAAY,CAACC,UAAU,GAAQhB,MAAOE,KAAKC,MAAMc,cAGvG,kBAACH,EAAA,EAAD,CAAWD,GAAG,iBAAiBd,MAAM,SAASgB,WAAY,CAACC,UAAU,GAAQhB,MAAOE,KAAKC,MAAMe,c,GATpFR,IAAMC,WC6IlBQ,E,WA/IX,aAAe,oB,sDAILnB,GACN,OAAQoB,MAAMC,WAAWrB,KAAWsB,SAAStB,K,4BAG3CuB,GACF,IAAI,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IACb,KAAbD,EAAMC,IACLD,EAAMG,OAAOF,EAAG,GAGxB,OAAOtB,O,qCAGIyB,GACX,IAAIC,EAAc,GACdC,EAAgB,GAChBC,EAAY,CACZ,IAAK,CACDC,WAAY,EACZC,cAAe,SAEnB,IAAK,CACDD,WAAY,EACZC,cAAe,QAEnB,IAAK,CACDD,WAAY,EACZC,cAAe,QAEnB,IAAK,CACDD,WAAY,EACZC,cAAe,QAEnB,IAAK,CACDD,WAAY,EACZC,cAAe,SAGvBL,EAAQA,EAAMM,QAAQ,OAAQ,IAE9BN,EAAQzB,KAAKgC,MAAMP,EAAMQ,MAAM,uBAC/B,IAAI,IAAIX,EAAI,EAAGA,EAAIG,EAAMF,OAAQD,IAAK,CAClC,IAAIY,EAAQT,EAAMH,GAElB,GAAGtB,KAAKmC,UAAUD,GACdR,GAAeQ,EAAQ,SACpB,IAA+B,IAA5B,QAAQE,QAAQF,GAAe,CAGrC,IAFA,IAAIG,EAAKH,EACLI,EAAKX,EAAcA,EAAcJ,OAAS,IACf,IAAzB,QAAQa,QAAQE,KAAgD,SAAhCV,EAAUS,GAAIP,eAA4BF,EAAUS,GAAIR,YAAcD,EAAUU,GAAIT,YAAgD,UAAhCD,EAAUS,GAAIP,eAA6BF,EAAUS,GAAIR,WAAaD,EAAUU,GAAIT,aAC1NH,GAAeC,EAAcY,MAAQ,IACrCD,EAAKX,EAAcA,EAAcJ,OAAS,GAE9CI,EAAca,KAAKH,QAChB,GAAa,MAAVH,EACNP,EAAca,KAAKN,QAChB,GAAa,MAAVA,EAAe,CACrB,KAAkD,MAA5CP,EAAcA,EAAcJ,OAAS,IACvCG,GAAeC,EAAcY,MAAQ,IAEzCZ,EAAcY,OAGtB,KAAMZ,EAAcJ,OAAS,GACzBG,GAAeC,EAAcY,MAAQ,IAEzC,OAAOb,I,gCAGDX,GAEP,OADC0B,QAAQC,IAAI1C,KAAK2C,KAAK5B,IAChBf,KAAK4C,IAAI5C,KAAK2C,KAAK5B,M,2BAGvBU,GACF,IAAIoB,EAAM,CAAC,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,GACpCC,EAAO,SAACC,GAAD,OAAOA,EAAEA,EAAExB,OAAS,IAC3ByB,EAAQ,GAEZ,OAAOvB,EAEJwB,MAAM,4BACNC,QAAO,SAACC,EAAQjB,GAKf,GAJIf,WAAWe,IACbiB,EAAOX,KAAKN,GAGVA,KAASW,EAAK,CAChB,KAAOC,EAAKE,KAAUH,GAAOA,EAAIX,IAAUW,EAAIC,EAAKE,KAClDG,EAAOX,KAAKQ,EAAMT,OACpBS,EAAMR,KAAKN,GAOb,GAJa,KAATA,GACFc,EAAMR,KAAKN,GAGA,KAATA,EAAc,CAChB,KAAsB,KAAfY,EAAKE,IACVG,EAAOX,KAAKQ,EAAMT,OACpBS,EAAMT,MAGR,OAAOY,IACN,IACFC,OAAOJ,EAAMK,WACbC,KAAK,O,0BAGPC,GAAa,IAAD,OAARC,EAAQ,uDAAJ,GAOT,OANAD,EAAGtB,MAAM,KAAKwB,SAAQ,SAAAC,GAGpBF,EAAEhB,KAAKkB,IAAMA,EAAIA,EAAI,EAAKC,SAASH,EAAEhC,QAAQ,EAAE,GAAG,GAAIkC,EAAGF,EAAEjB,WAGtDiB,EAAE,K,+BAGJI,EAAUC,EAAUC,GACzB,IACIC,EAAUC,OAAOC,SAASL,EADnB,IAEPM,EAAUF,OAAOC,SAASH,EAFnB,IAMX,OAFArB,QAAQC,IAAI,aAAeqB,EAAU,cAAgBA,EAAU,eAAiBF,GAEzEA,GACH,IAAK,IAAK,OAAQE,EAAUG,EAC5B,IAAK,IAAK,OAAQH,EAAUG,EAC5B,IAAK,IAAK,OAAQH,EAAUG,EAC5B,IAAK,IAAK,OAAQH,EAAUG,EAC5B,QAAS,OAAO,O,KCHbC,E,kDA9HX,aAAe,IAAD,8BACV,gBAEKC,MAAQ,CACXC,QAAS,GACTC,OAAQ,IAGV,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAKE,WAAa,EAAKA,WAAWF,KAAhB,gBAClB,EAAKG,YAAc,EAAKA,YAAYH,KAAjB,gBACnB,EAAKI,UAAY,EAAKA,UAAUJ,KAAf,gBAZP,E,wDAeFK,GAER,IACIC,EADiB9E,KAAKoE,MAAMC,QACEQ,EAAEE,cAAcjF,MAElDE,KAAKgF,SAAS,CACZX,QAASS,M,oCAKDD,GAEV,IAAII,EAAiBjF,KAAKoE,MAAMC,QAChCS,EAAaG,EACbC,EAAmBL,EAAEE,cAAcjF,MAEvC,GAAuB,KAAnBmF,EAAuB,CACzB,IAAIE,EAAgBF,EAAeG,OAAO,GAItCpF,KAAKqF,WAAWF,IAE4B,IAA1C,CAAC,IAAK,KAAK/C,QAAQ8C,GACrBJ,GAAcI,EAGdJ,EAAcA,EAAWQ,UAAU,EAAIR,EAAWvD,OAAS,GAAM2D,EAKnEJ,GAAcI,EAKlBlF,KAAKgF,SAAS,CACZX,QAASS,M,iCAKAD,GACP7E,KAAKgF,SAAS,CACZX,QAAS,GACTC,OAAQ,O,kCAKAO,GACV,IAAII,EAAiBjF,KAAKoE,MAAMC,QAC5BS,EAAaG,EAEM,KAAnBA,IACFH,EAAaG,EAAeK,UAAU,EAAIR,EAAWvD,OAAS,IAGhEvB,KAAKgF,SAAS,CACZX,QAASS,EACTR,OAAQ,O,iCAKHxE,GACP,GAAa,MAATA,GAA2B,KAAVA,EACnB,OAAgD,IAAzC,CAAC,IAAK,IAAK,IAAK,KAAKsC,QAAQtC,K,gCAI9B+E,GAGR,IAAII,EAAiBjF,KAAKoE,MAAMC,QAEhC5B,QAAQC,IAAI,oBAAsBuC,GAMlC,IAEIjE,GAFsB,IAAIC,GAEC2D,UAAUK,GACzCjE,EAAWE,MAAMF,GAAmB,oBAATA,EAE3ByB,QAAQC,IAAI,YAAc1B,GAI1BhB,KAAKgF,SAAS,CACZX,QAASY,EACTX,OAAQtD,M,+BAOV,OACI,yBAAKtB,UAAU,QACX,kBAAC,EAAD,CAAaQ,iBAAkBF,KAAKuE,YAAapE,mBAAoBH,KAAKyE,cAAepE,iBAAkBL,KAAK2E,YAAavE,gBAAiBJ,KAAK0E,WAAYnE,aAAcP,KAAK4E,YAClL,kBAAC,EAAD,CAAc7D,WAAYf,KAAKoE,MAAMC,QAASrD,OAAQhB,KAAKoE,MAAME,c,GA1HxD9D,IAAMC,WCsHhB8E,E,kDAlHb,aAAe,IAAD,8BACZ,gBAEKnB,MAAQ,CACXC,QAAS,GACTC,OAAQ,IAGV,EAAKkB,SAAW,EAAKA,SAAShB,KAAd,gBAChB,EAAKiB,UAAY,EAAKA,UAAUjB,KAAf,gBAEjB,EAAKa,WAAa,EAAKA,WAAWb,KAAhB,gBAClB,EAAKkB,MAAQ,EAAKA,MAAMlB,KAAX,gBACb,EAAKmB,OAAS,EAAKA,OAAOnB,KAAZ,gBAbF,E,qDAgBLK,GACP,IACIC,EADiB9E,KAAKoE,MAAMC,QACEQ,EAAEE,cAAcjF,MAElDE,KAAKgF,SAAS,CACZX,QAASS,M,4BAKPD,GACJ7E,KAAKgF,SAAS,CACZX,QAAS,GACTC,OAAQ,O,6BAKLO,GACL,IAAII,EAAiBjF,KAAKoE,MAAMC,QAC5BS,EAAaG,EAEM,KAAnBA,IACFH,EAAaG,EAAeK,UAAU,EAAIR,EAAWvD,OAAS,IAGhEvB,KAAKgF,SAAS,CACZX,QAASS,EACTR,OAAQ,O,iCAKDxE,GACT,GAAa,MAATA,GAA2B,KAAVA,EACnB,OAAgD,IAAzC,CAAC,IAAK,IAAK,IAAK,KAAKsC,QAAQtC,K,gCAI9B+E,GACR,IAAII,EAAiBjF,KAAKoE,MAAMC,QAC5BS,EAAaG,EACbC,EAAmBL,EAAEE,cAAcjF,MAEvC,GAAuB,KAAnBmF,EAAuB,CACzB,IAAIE,EAAgBF,EAAeG,OAAO,GAItCpF,KAAKqF,WAAWF,IAE4B,IAA1C,CAAC,IAAK,KAAK/C,QAAQ8C,GACrBJ,GAAcI,EAGdJ,EAAcA,EAAWQ,UAAU,EAAIR,EAAWvD,OAAS,GAAM2D,EAKnEJ,GAAcI,EAKlBlF,KAAKgF,SAAS,CACZX,QAASS,M,+BAaX,OACE,yBAAKpF,UAAU,OACb,kBAACkG,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYnG,QAAQ,MAApB,gBAMJ,kBAAC,EAAD,W,GA3GUa,aCIEuF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASlD,MACvB,2DCXNmD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.874621ea.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass ButtonPanel extends React.Component {\r\n\r\n    render(){\r\n\r\n\r\n        const buttonStyle = {minWidth: '60px', width: '60px', height: '60px', margin: '5px'};\r\n  const goButtonStyle = {minWidth: '60px', width: '130px', height: '60px', margin: '5px'};\r\n  const labelStyle = {fontSize: '20px', lineHeight: buttonStyle.height};\r\n\r\n  const style = Object.assign({}, buttonStyle);\r\n  const goSTyle = Object.assign({}, goButtonStyle);\r\n\r\n  const label = '1';\r\n  const text = '1';\r\n\r\n  const primary = false;\r\n\r\n\r\n        return (\r\n            <div className=\"input-buttons\">\r\n              <Button variant=\"contained\" label={label} style={style} labelStyle={labelStyle} value=\"1\" onClick={this.props.onNumberBtnClick}>{text}</Button>\r\n              <Button variant=\"contained\" label={label} style={style} labelStyle={labelStyle} value=\"2\" onClick={this.props.onNumberBtnClick}>2</Button>\r\n              <Button variant=\"contained\" label={label} style={style} labelStyle={labelStyle} value=\"3\" onClick={this.props.onNumberBtnClick}>3</Button>\r\n              <Button variant=\"contained\" label={label} style={style} labelStyle={labelStyle} value=\"+\" onClick={this.props.onOperatorBtnClick}>+</Button>\r\n              <Button variant=\"contained\" label={label} style={style} labelStyle={labelStyle} value=\"4\" onClick={this.props.onNumberBtnClick}>4</Button>\r\n              <Button variant=\"contained\" label={label} style={style} labelStyle={labelStyle} value=\"5\" onClick={this.props.onNumberBtnClick}>5</Button>\r\n              <Button variant=\"contained\" label={label} style={style} labelStyle={labelStyle} value=\"6\" onClick={this.props.onNumberBtnClick}>6</Button>\r\n              <Button variant=\"contained\" label={label} style={style} labelStyle={labelStyle} value=\"-\" onClick={this.props.onOperatorBtnClick}>-</Button>\r\n              <Button variant=\"contained\" label={label} style={style} labelStyle={labelStyle} value=\"7\" onClick={this.props.onNumberBtnClick}>7</Button>\r\n              <Button variant=\"contained\" label={label} style={style} labelStyle={labelStyle} value=\"8\" onClick={this.props.onNumberBtnClick}>8</Button>\r\n              <Button variant=\"contained\" label={label} style={style} labelStyle={labelStyle} value=\"9\" onClick={this.props.onNumberBtnClick}>9</Button>\r\n              <Button variant=\"contained\" label={label} style={style} labelStyle={labelStyle} value=\"*\" onClick={this.props.onOperatorBtnClick}>*</Button>\r\n              <Button variant=\"contained\" label={label} style={style} labelStyle={labelStyle} value=\"9\" onClick={this.props.onNumberBtnClick}>0</Button>\r\n              <Button variant=\"contained\" label={label} style={style} labelStyle={labelStyle} value=\"(\" onClick={this.props.onOperatorBtnClick}>(</Button>\r\n              <Button variant=\"contained\" label={label} style={style} labelStyle={labelStyle} value=\")\" onClick={this.props.onOperatorBtnClick}>)</Button>\r\n              <Button variant=\"contained\" label={label} style={style} labelStyle={labelStyle} value=\"/\" onClick={this.props.onOperatorBtnClick}>/</Button>\r\n              <Button variant=\"contained\" label={label} style={style} labelStyle={labelStyle} value=\"C\" onClick={this.props.onClearBtnClick}>C</Button>\r\n              <Button variant=\"contained\" label={label} style={style} labelStyle={labelStyle} value=\"<\" onClick={this.props.onDeleteBtnClick}>&lt;</Button>\r\n              <Button variant=\"contained\" color=\"primary\" label={label} style={goSTyle} labelStyle={labelStyle} value=\"GO\" onClick={this.props.onGoBtnClick}>Go</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ButtonPanel;","import React from 'react'\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nclass DisplayPanel extends React.Component {\r\n\r\n    render(){\r\n        return (\r\n            <div id=\"calc-right-column\">\r\n                <div className=\"input-field\">\r\n                    <TextField id=\"standard-basic\" label=\"Expression\" InputProps={{readOnly: true,}} value={this.props.expression} />\r\n                </div>\r\n\r\n                <TextField id=\"standard-basic\" label=\"Answer\" InputProps={{readOnly: true,}} value={this.props.answer}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DisplayPanel;","class CalculatorService{\r\n\r\n    constructor() {\r\n       \r\n    }\r\n\r\n    isNumeric(value) {\r\n        return !isNaN(parseFloat(value)) && isFinite(value);\r\n    }\r\n\r\n    clean(array) {\r\n        for(var i = 0; i < array.length; i++) {\r\n            if(array[i] === \"\") {\r\n                array.splice(i, 1);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    infixToPostfix(infix) {\r\n        var outputQueue = \"\";\r\n        var operatorStack = [];\r\n        var operators = {\r\n            \"^\": {\r\n                precedence: 4,\r\n                associativity: \"Right\"\r\n            },\r\n            \"/\": {\r\n                precedence: 3,\r\n                associativity: \"Left\"\r\n            },\r\n            \"*\": {\r\n                precedence: 3,\r\n                associativity: \"Left\"\r\n            },\r\n            \"+\": {\r\n                precedence: 2,\r\n                associativity: \"Left\"\r\n            },\r\n            \"-\": {\r\n                precedence: 2,\r\n                associativity: \"Left\"\r\n            }\r\n        }\r\n        infix = infix.replace(/\\s+/g, \"\");\r\n        //infix = infix.split(/([\\+\\-\\*\\/\\^\\(\\)])/).clean();\r\n        infix = this.clean(infix.split(/([\\+\\-\\*\\/\\^\\(\\)])/));\r\n        for(var i = 0; i < infix.length; i++) {\r\n            var token = infix[i];\r\n            //if(token.isNumeric()) {\r\n            if(this.isNumeric(token)) {\r\n                outputQueue += token + \" \";\r\n            } else if(\"^*/+-\".indexOf(token) !== -1) {\r\n                var o1 = token;\r\n                var o2 = operatorStack[operatorStack.length - 1];\r\n                while(\"^*/+-\".indexOf(o2) !== -1 && ((operators[o1].associativity === \"Left\" && operators[o1].precedence <= operators[o2].precedence) || (operators[o1].associativity === \"Right\" && operators[o1].precedence < operators[o2].precedence))) {\r\n                    outputQueue += operatorStack.pop() + \" \";\r\n                    o2 = operatorStack[operatorStack.length - 1];\r\n                }\r\n                operatorStack.push(o1);\r\n            } else if(token === \"(\") {\r\n                operatorStack.push(token);\r\n            } else if(token === \")\") {\r\n                while(operatorStack[operatorStack.length - 1] !== \"(\") {\r\n                    outputQueue += operatorStack.pop() + \" \";\r\n                }\r\n                operatorStack.pop();\r\n            }\r\n        }\r\n        while(operatorStack.length > 0) {\r\n            outputQueue += operatorStack.pop() + \" \";\r\n        }\r\n        return outputQueue;\r\n    }\r\n\r\n    calculate(expression){\r\n        console.log(this.yard(expression));\r\n       return this.rpn(this.yard(expression));\r\n    }\r\n\r\n    yard (infix) {\r\n        let ops = {'+': 1, '-': 1, '*': 2, '/': 2};\r\n        let peek = (a) => a[a.length - 1];\r\n        let stack = [];\r\n      \r\n        return infix\r\n          //.split('')\r\n          .match(/[^\\d()]+|[\\d.]+|[(]|[)]/g)\r\n          .reduce((output, token) => {\r\n            if (parseFloat(token)) {\r\n              output.push(token);\r\n            }\r\n      \r\n            if (token in ops) {\r\n              while (peek(stack) in ops && ops[token] <= ops[peek(stack)])\r\n                output.push(stack.pop());\r\n              stack.push(token);\r\n            }\r\n      \r\n            if (token == '(') {\r\n              stack.push(token);\r\n            }\r\n      \r\n            if (token == ')') {\r\n              while (peek(stack) != '(')\r\n                output.push(stack.pop());\r\n              stack.pop();\r\n            }\r\n      \r\n            return output;\r\n          }, [])\r\n          .concat(stack.reverse())\r\n          .join(' ');\r\n      };\r\n      \r\n    rpn (ts, s = []) {\r\n        ts.split(' ').forEach(t =>{ \r\n          //console.log(\"t = \" + t);\r\n          //s.push(t == +t ? t : eval(s.splice(-2,1)[0] + t + s.pop()));\r\n          s.push(t == +t ? t : this.evaluate(s.splice(-2,1)[0], t, s.pop()));\r\n        }\r\n        );\r\n        return s[0];\r\n    }\r\n\r\n    evaluate(operand1, operator, operand2){\r\n        let base = 10;\r\n        let number1 = Number.parseInt(operand1, base);\r\n        let number2 = Number.parseInt(operand2, base);\r\n\r\n        console.log(\"number1 = \" + number1 + \" number2 = \" + number1 + \" operator = \" + operator)\r\n\r\n        switch(operator){   \r\n            case \"+\": return (number1 + number2);\r\n            case \"-\": return (number1 - number2);\r\n            case \"*\": return (number1 * number2);\r\n            case \"/\": return (number1 / number2);\r\n            default: return 0;      \r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CalculatorService;","import React from 'react'\r\n\r\nimport ButtonPanel from \"./ButtonPanel\";\r\nimport DisplayPanel from \"./DisplayPanel\";\r\nimport CalculatorService from \"./../../services/CalculatorService\";\r\n\r\nclass Calculator extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n    \r\n        this.state = {\r\n          display: \"\",\r\n          result: \"\"\r\n        }\r\n    \r\n        this.inputNumber = this.inputNumber.bind(this);\r\n        this.inputOperator = this.inputOperator.bind(this);\r\n        this.clearInput = this.clearInput.bind(this);\r\n        this.deleteInput = this.deleteInput.bind(this);\r\n        this.calculate = this.calculate.bind(this);\r\n      }\r\n\r\n    inputNumber(e) {\r\n        \r\n        let currentDisplay = this.state.display;\r\n        let newDisplay = currentDisplay + e.currentTarget.value;\r\n        \r\n        this.setState({\r\n          display: newDisplay\r\n        });\r\n        \r\n    }\r\n\r\n    inputOperator(e){\r\n\r\n        let currentDisplay = this.state.display;\r\n    let newDisplay = currentDisplay;\r\n    let selectedOPerator = e.currentTarget.value;\r\n\r\n    if (currentDisplay !== \"\") {\r\n      let lastCharacter = currentDisplay.slice(-1);\r\n\r\n      //console.log('lastCharacter = ' + lastCharacter + ' is an operator ? ' + this.isOPerator(lastCharacter))\r\n\r\n      if (this.isOPerator(lastCharacter)) {\r\n\r\n        if ([\"(\", \")\"].indexOf(selectedOPerator) !== -1) {\r\n          newDisplay += selectedOPerator;\r\n        } else {\r\n          //replace the last character by new operator\r\n          newDisplay = (newDisplay.substring(0, (newDisplay.length - 1)) + selectedOPerator);\r\n        }\r\n\r\n\r\n      } else {\r\n        newDisplay += selectedOPerator;\r\n      }\r\n\r\n    }\r\n\r\n    this.setState({\r\n      display: newDisplay\r\n    });\r\n\r\n    }\r\n\r\n    clearInput(e) {\r\n        this.setState({\r\n          display: \"\",\r\n          result: \"\"\r\n        });\r\n    \r\n      }\r\n    \r\n      deleteInput(e) {\r\n        let currentDisplay = this.state.display;\r\n        let newDisplay = currentDisplay;\r\n    \r\n        if (currentDisplay !== \"\") {\r\n          newDisplay = currentDisplay.substring(0, (newDisplay.length - 1));\r\n        }\r\n    \r\n        this.setState({\r\n          display: newDisplay,\r\n          result: \"\"\r\n        });\r\n    \r\n      }\r\n\r\n    isOPerator(value) {\r\n        if (value != null && value !== \"\") {\r\n          return [\"+\", \"-\", \"*\", \"/\"].indexOf(value) !== -1;\r\n        }\r\n      }\r\n\r\n      calculate(e) {\r\n        //let val = this.state.display;\r\n        //val += e.currentTarget.value;\r\n        let currentDisplay = this.state.display;\r\n    \r\n        console.log(\"currentDisplay = \" + currentDisplay);\r\n        //console.log(\"yarn = \" + this.yard(currentDisplay));\r\n        //console.log(\"answer = \" + this.rpn(this.yard(currentDisplay)));\r\n    \r\n        //this.rpn(this.yard('3 + 4 * 5 / (3 + 2)'))\r\n        //let answer = this.rpn(this.yard(currentDisplay))\r\n        const calculatorService = new CalculatorService();\r\n    \r\n        let answer = calculatorService.calculate(currentDisplay);\r\n        answer = (!isNaN(answer) ? answer : \"Invalid Expresion\");\r\n\r\n        console.log(\"answer = \" + answer);\r\n    \r\n        //let answer = \"100\";\r\n        //let result = ` = ${answer}`;\r\n        this.setState({\r\n          display: currentDisplay,\r\n          result: answer\r\n        });\r\n    \r\n      }\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div className=\"calc\">\r\n                <ButtonPanel onNumberBtnClick={this.inputNumber} onOperatorBtnClick={this.inputOperator} onDeleteBtnClick={this.deleteInput} onClearBtnClick={this.clearInput} onGoBtnClick={this.calculate}/>\r\n                <DisplayPanel expression={this.state.display} answer={this.state.result}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Calculator;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Calculator from \"./components/calculator/Calculator\";\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      display: \"\",\r\n      result: \"\"\r\n    }\r\n\r\n    this.numInput = this.numInput.bind(this);\r\n    this.operInput = this.operInput.bind(this);\r\n    //this.calculate = this.calculate.bind(this);\r\n    this.isOPerator = this.isOPerator.bind(this);\r\n    this.clear = this.clear.bind(this);\r\n    this.delete = this.delete.bind(this);\r\n  }\r\n\r\n  numInput(e) {\r\n    let currentDisplay = this.state.display;\r\n    let newDisplay = currentDisplay + e.currentTarget.value;\r\n\r\n    this.setState({\r\n      display: newDisplay\r\n    });\r\n\r\n  }\r\n\r\n  clear(e) {\r\n    this.setState({\r\n      display: \"\",\r\n      result: \"\"\r\n    });\r\n\r\n  }\r\n\r\n  delete(e) {\r\n    let currentDisplay = this.state.display;\r\n    let newDisplay = currentDisplay;\r\n\r\n    if (currentDisplay !== \"\") {\r\n      newDisplay = currentDisplay.substring(0, (newDisplay.length - 1));\r\n    }\r\n\r\n    this.setState({\r\n      display: newDisplay,\r\n      result: \"\"\r\n    });\r\n\r\n  }\r\n\r\n  isOPerator(value) {\r\n    if (value != null && value !== \"\") {\r\n      return [\"+\", \"-\", \"*\", \"/\"].indexOf(value) !== -1;\r\n    }\r\n  }\r\n\r\n  operInput(e) {\r\n    let currentDisplay = this.state.display;\r\n    let newDisplay = currentDisplay;\r\n    let selectedOPerator = e.currentTarget.value;\r\n\r\n    if (currentDisplay !== \"\") {\r\n      let lastCharacter = currentDisplay.slice(-1);\r\n\r\n      //console.log('lastCharacter = ' + lastCharacter + ' is an operator ? ' + this.isOPerator(lastCharacter))\r\n\r\n      if (this.isOPerator(lastCharacter)) {\r\n\r\n        if ([\"(\", \")\"].indexOf(selectedOPerator) !== -1) {\r\n          newDisplay += selectedOPerator;\r\n        } else {\r\n          //replace the last character by new operator\r\n          newDisplay = (newDisplay.substring(0, (newDisplay.length - 1)) + selectedOPerator);\r\n        }\r\n\r\n\r\n      } else {\r\n        newDisplay += selectedOPerator;\r\n      }\r\n\r\n    }\r\n\r\n    this.setState({\r\n      display: newDisplay\r\n    });\r\n\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n  //console.log(yard('3 + 4 * 5 / (3 + 2)'));\r\n  //console.log(rpn(yard('3 + 4 * 5 / (3 + 2)')));\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\">\r\n              Calculator\r\n              </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Calculator />\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}